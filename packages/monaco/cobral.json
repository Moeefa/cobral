{
	"displayName": "Cobral",
	"name": "cobral",
	"scopeName": "source.cobral",
	"patterns": [
		{
			"patterns": [
				{
					"name": "punctuation.terminator.statement.cobral",
					"match": ";"
				},
				{
					"name": "punctuation.separator.cobral",
					"match": ","
				},
				{
					"name": "punctuation.separator.cobral",
					"match": ":"
				}
			]
		},
		{
			"include": "#booleans"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#imports"
		},
		{
			"include": "#loops"
		},
		{
			"include": "#control-structures"
		},
		{
			"include": "#functions"
		},
		{
			"include": "#variables"
		},
		{
			"include": "#operators"
		},
		{
			"include": "#numbers"
		}
	],
	"repository": {
		"booleans": {
			"patterns": [
				{
					"name": "constant.language.boolean.cobral",
					"match": "\\b(verdadeiro|falso)\\b"
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"name": "storage.modifier.cobral",
					"match": "\\b(declare\\bconstante|declare|constante|funcao)\\b"
				},
				{
					"name": "keyword.return.cobral",
					"match": "\\b(retorne|pare)\\b"
				}
			]
		},
		"variables": {
			"patterns": [
				{
					"name": "variable.other.cobral",
					"match": "\\b[\\p{L}_][\\p{L}0-9_]*\\b"
				}
			]
		},
		"control-structures": {
			"patterns": [
				{
					"name": "keyword.control.cobral",
					"match": "\\b(se|senao|escolha|caso|padrao|nao|e|ou)\\b"
				}
			]
		},
		"loops": {
			"patterns": [
				{
					"name": "keyword.loop.cobral",
					"match": "\\b(para|enquanto)\\b"
				}
			]
		},
		"functions": {
			"patterns": [
				{
					"name": "entity.name.function.cobral",
					"match": "\\b[_a-zA-Z][_a-zA-Z0-9]*\\s*(?=\\()"
				}
			]
		},
		"operators": {
			"patterns": [
				{
					"name": "keyword.operator.cobral",
					"match": "(==|!=|<=|>=|<|>|\\+|\\-|\\*|\\/|%)"
				}
			]
		},
		"strings": {
			"patterns": [
				{
					"name": "string.quoted.double.cobral",
					"begin": "\"",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.cobral"
						}
					},
					"end": "\"",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end.cobral"
						}
					},
					"patterns": [
						{
							"name": "constant.character.escape.cobral",
							"match": "\\\\."
						}
					]
				}
			]
		},
		"numbers": {
			"patterns": [
				{
					"name": "constant.numeric.cobral",
					"match": "\\b\\d+(\\.\\d+)?\\b"
				}
			]
		},
		"comments": {
			"patterns": [
				{
					"begin": "//",
					"beginCaptures": {
						"0": { "name": "punctuation.definition.comment.cobral" }
					},
					"end": "$",
					"name": "comment.line.double-slash.cobral"
				},
				{
					"begin": "/\\*",
					"beginCaptures": {
						"0": { "name": "punctuation.definition.comment.cobral" }
					},
					"end": "\\*/",
					"name": "comment.block.cobral"
				}
			]
		},
		"imports": {
			"patterns": [
				{
					"name": "meta.import.cobral",
					"begin": "\\bimporte\\b",
					"beginCaptures": {
						"0": {
							"name": "keyword.control.import.cobral"
						}
					},
					"end": "(?=$|;)",
					"patterns": [
						{
							"name": "string.quoted.double.cobral",
							"begin": "\"",
							"end": "\"",
							"patterns": [
								{
									"name": "constant.character.escape.cobral",
									"match": "\\\\."
								}
							]
						}
					]
				}
			]
		}
	}
}
